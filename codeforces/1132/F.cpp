/*
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@%#%*#@@@@%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@##+##%@%#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@#*+++#%#%%%%%%%%#=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%**++*%%%%##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@*=++*#*%@@@@@#==+=-=+====+%@@@@@@@@@@@@@@@%%@@@@%%@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@%@%%*++#%@@*+#+=---====+#%%##@@@@@@@@@@@@@#*#%%%@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@%*+***#%@@%+=+*#%@@%#**#%#%@@#%@@@@@@@@@@@@@#@@%@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%#%%@@%*%@@@@#%*===++*%%%##@@@@@@@@@@@@@@@@%#%%#%@#@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%#%@@@*%@@@@@%%%@@%##%@%%##*##%%%@@@@@%#++**+#@%##@##%@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%#@@@@#@@@%#@@@%%%@@@@%#%@@@@@@@@@@@@@%#*#+----*%@%@#%@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@##@@@%%@%%*%@@@@@@%%@@@@@@%%@@@@@@@@%#++*#=----:%#*#@#%@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@%##@@@#@@%#*@*#@@@@@@%:...=@@@@@@@%#+--+*#-----:*+*=-=%@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@%*#@@%%@@@****@@@@@@*..--==#@@@@@%+----*#+----:+-**----%@%%%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@#*%@@%@@@@#**+@@@@@@=:-:--==%@@@*-----=*#+-=%+--**-----*%%@%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%@@#@@@@%#*=#@@@@@#-:-:-=+@@#*==--==+**+-+*%@#+-----=##%@@%@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@#*=*@@@@@@=:+====**+==-=---=+****+*%@%*----*%#%@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*=+%@@@@@#-=%=--=-++=--======*=:+%%#@%*---*%%%@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@%%#=+*#@@@@@%=-------=--=----+==*+-.:#**+=--**@@%@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@%%++@##@@@@@@#=+:..-------=---=+*+##+==---+##@@@%@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##+@@#%%@@@@@#%%....------------+==++=---+#%@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@%@@@%#%#**%%#%%@@+@@@@%=@*...:--------------=-----=%@@%@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%#@#%%@@%**%@*%%=#*....--------------------=#@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%#*%#=-#+%%*+##=:....--------------------=*@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@%%@@@%#+-::*#*##=+**--....:----------------=---+@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+....--=+--=**+----...---------+=----+##%%@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+......:-=--=++=----==..----------=%++#@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*.....:::-=---==------=*+:----------=%@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@#%@#-.....:----==-===-------++++--------#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@%@@@%#%@%@@@@#+=......::----+---=--------+###**=----=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@%*#%*#@@@%*+#%%#%%#=......::-----+-----------#%%%%%###++*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@#-===*@@##*+++**#%@-.......::------+-----------#%%@%#%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@%+++*@@@@@@@@@@@@@#*+-::::::-------==--------==*@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@%+=+**%@@@@%####@@@@@@@@#%+--------==-----=+*#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@+*===+***#@@@@@%##%%#%@@@@#*--------+------+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@%====-=####%###%@@@@@@@@@@@@@#+------+=-----%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@==========*%%@@@@@@@@@@@@@@@@@#*=---===---=##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@+=====+++++=====**+*#%@@@@@@@@@@@%*--==----##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@#======+*+++*#**#%%##**++*##@@@@@@@@@%*=+=--=+@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@#===+++**===+++*########@@@@@@@@@@@@@@@@%#=--=#%@@@@%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@%+==+%#*+========***%**+++*%@%%@@@@@@@@@@@@%*=-=%@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@#+*+***+=======+#***##%@@#**#%@@@@@@@@@@@@@@@%#-=+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@#%*+**+======+*******###@@####*#@@@@@@@@@@@@@@%%+--+#@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@%#+======*********#####@@@@%**%@@@@@@@@@@@@@@@#****##%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@%*======+*********#######@@@@@@@@@@@@@@@@@@@@@*---#++*%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@#+=====+*******######***##%@@@@@@@@@@@@@@@@@@@%=--*#*##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define int ll
#define endl "\n"
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef unordered_map<int, int> umii;
typedef map<int,int> mii;
#define all(x) begin(x), end(x)
#define allr(x) rbegin(x), rend(x)
#define maxEle *max_element(v.begin(), v.end());
#define minEle *min_element(v.begin(), v.end());
#define sum_all(x) accumulate(all(x), 0);
#define ceil_i(a, b) (((ll)(a)+(ll)(b-1))/(ll)(b))
#define floor_i(a, b) (a/b)
#define round_i(a, b) ((a+(b/2))/b)
#define endd return 0;

void fastIO(void){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

const int MAX = 5e3 + 5;
int memory[MAX][MAX];
string s;
int n;
int dp(int l, int r){
    if(l > r) return 0;
    if(l == r) return 1;

    auto &ret = memory[l][r];
    if(~ret) return ret;

    int ch1 = INT_MAX;
    int ans = 1 + dp(l + 1, r); //abaca

    for(int k = l + 1; k <= r; ++k){
        if(s[l] == s[k]){
            ch1 = dp(l + 1, k) + dp(k + 1, r);
            }
        ans = min(ans, ch1);
    }
    return ret = ans;
}


signed main(){
    fastIO();
    cin >> n >> s;
    memset(memory, -1, sizeof(memory));
    cout << dp(0, n - 1) << endl;
    endd;
}
 