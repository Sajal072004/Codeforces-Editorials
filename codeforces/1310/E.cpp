// LUOGU_RID: 159242871
#include<bits/stdc++.h>
using namespace std;
#define int long long
#define mod 998244353
const int oo[]={299463,300054,300683,301250,301807,302396,303016,303585,304196,304827,305434,306041,306671,307231,307819,308417,309030,309633,310231,310811,311433,312014,312584,313215,313823,314423,315062,315676,316260,316865,317521,318134,318757,319355,319963,320595,321209,321835,322444,323034,323680,324341,324957,325563,326213,326808,327398,328047,328694,329310,329942,330614,331244,331844,332518,333158,333778,334434,335048,335679,336298,336963,337642,338286,338920,339601,340253,340860,341523,342167,342790,343433,344094,344743,345373,346050,346691,347317,347990,348679,349369,350032,350696,351348,351963,352645,353338,353995,354622,355298,355984,356644,357329,358012,358715,359345,360016,360707,361362,362025,362710,363431,364118,364797,365512,366171,366851,367596,368257,368929,369664,370374,371016,371704,372395,373083,373802,374493,375188,375881,376577,377319,378042,378731,379413,380138,380834,381513,382256,382934,383632,384390,385118,385807,386551,387261,387962,388697,389405,390093,390830,391563,392278,393012,393678,394401,395176,395952,396666,397400,398111,398815,399553,400316,401010,401762,402531,403271,403975,404699,405459,406206,406985,407716,408478,409194,409924,410671,411432,412148,412925,413682,414441,415223,415981,416745,417539,418303,419009,419773,420519,421312,422079,422819,423590,424384,425112,425895,426674,427446,428195,428996,429751,430500,431327,432111,432897,433679,434455,435193,436039,436852,437637,438418,439237,439989,440731,441536,442311,443096,443905,444714,445538,446336,447112,447937,448732,449543,450365,451174,451945};
int dp[3005];
int dp2[71][3005];
int f[3005];
int n,k;
void op(vector<int> &o){
	vector<int> tmp;
	int sz=o.size();
	for(auto v:o){
		if(tmp.size()>n)break;
		for(int i=1;i<=v;i++){
			if(tmp.size()>n)break;
			tmp.push_back(sz);
		}
		sz--;
	}
	swap(tmp,o);
	reverse(o.begin(),o.end());
	return ;
}
bool check(vector<int> o){
	//return 1;
	for(int i=1;i<k-1;i++){
		op(o);
		int sm=0;
		for(auto v:o)sm+=v;
		if(sm>n)return 0;
		if(f[sm]<k-i-1){
			return 0;
		}
	}
	int sm=0;
	for(int i=0;i<o.size();i++)sm+=((int)o.size()-i)*o[i];
	return sm<=n;
}
vector<int> now;
int dfs(int x,int sm,bool flg){
	//cerr<<x<<" "<<sm<<" "<<flg<<endl;
	int ans=0;
	if(flg){
		if(!check(now))return 0;
		ans++;
	}
	if(f[sm+x]<k-1)return ans;
	int z=0;
	for(int i=0;;i++){
		if(f[sm+i*x]>=k-1){
			z=i;
			if(i)now.push_back(x);
			ans+=dfs(x+1,sm+i*x,i!=0);
			//for(int p=1;p<=i;p++)now.pop_back();
		}else break;
	}
	for(int i=1;i<=z;i++)now.pop_back();
	return ans;
}
signed main(){
	cin>>n>>k;f[0]=f[1]=LONG_LONG_MAX;
	for(int _=2;_<=3000;_++){
		vector<int> o;int cnt=0;
		for(int i=1;i<=_;i++)o.push_back(1);
		while(1){
			cnt++;
			op(o);
			if(o.size()>n)break;
		}
		f[_]=cnt-1;
	}
	if(k==3 and n>=1800){
		cout<<oo[n-1800]<<endl;
		return 0;
	}
	//cout<<f[3]<<endl;
	else if(k==1){
		dp[0]=1;
		for(int i=1;i<=n;i++){
			for(int j=i;j<=n;j++)dp[j]=(dp[j]+dp[j-i])%mod;
		}
		int ans=0;
		for(int i=1;i<=n;i++)ans=(ans+dp[i])%mod;
		cout<<ans<<endl;return 0;
	}else if(k==2){
		dp2[0][0]=1;
		int lim=sqrt(2*n);
		for(int i=n;i>=1;i--){
			for(int j=0;j<=lim;j++){
				for(int p=0;p<=n-(j+1)*i;p++){
					dp2[j+1][p+(j+1)*i]=(dp2[j+1][p+(j+1)*i]+dp2[j][p])%mod;
				}
			}
		}
		int ans=0;
		for(int i=1;i<=lim;i++)for(int j=1;j<=n;j++)ans=(ans+dp2[i][j])%mod;
		cout<<ans<<endl;return 0;
	}else{
		cout<<dfs(1,0,0)<<endl;
	}
	return 0;
}