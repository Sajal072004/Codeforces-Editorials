#include <bits/stdc++.h>
using namespace std;


//                              -######:                         .#######:                   
//                          .+##*-----=##+                    .###+-----=##.                 
//                        .*#+-----------##:                .##+----------*#:                
//                      .+#*--------------*#=              +#*-------------*#.               
//                     .##=----------------=#*           .##=--------------=#=               
//                    :#*-------------=++**#################*++-------------*#:              
//                   :#*---------+*###*+==------------------=++*###*=--------#+              
//                  :#*------=*##*=--------------------------------=*##*+----*#.             
//                  #*-----*##=----------------------------------------=*##+-=#=             
//                 ##---=##*-=+-----------------------------------------*#=##*##             
//                :#=--##+---####+-----------------------------------=###----*##             
//                ##-##+---*########=-----------------------------=#######*---=##            
//               =###*----*###+*####*---------*=---*+----*#=-----*##########----*#.          
//              .*##=----+###.  =###+---------#####**#####--------+####: +###----*#:         
//              =#*------####= +####=---------*#+=+++++=*#--------=###*- +###-----#*         
//             -#+-------##########+----------+#*+++++++**--------=##########-----=#=        
//            -#+--------=#########------------##+++++++#+---------=########-------*+        
//           :#*-----------+#####=-------------=##++++*#*------------=+***=------+*####*=    
//          .#*----------------------------------+####*=-----------------------+#*=----=##:  
//          +#=----------------------------------------------------------------#*--------#+  
//         :#+-----------------------------------------------------------------##--------**  
//         **-------------------------------------------------------------------*##*-----**  
//        =#*==-----------------------------------------------------------------+#*------#+  
//        *#=====----------------------------------::--------------------------=*=------*#:  
//       .#*=====---------------------+#*---:.            .:---------------------------*#:   
//       :#+===-------------------------*#+                  .----------------------=*#+     
//       +#=----------------------=#+----=*#.                  :--------------------##.      
//       *#------------------------=##+---=#=                   .-------------------#+       
//       ##==------------------------=*##*#+.                    :-----------------=#=       
//       ##****+++++++++++++++++++++++==++========================+++++++++++++++++*#+

//---------DATATYPES-------------------------------------------------------------------------
#define double long double
#define db double
#define ll long long
#define ull unsigned long long
#define int long long

//---------PAIR------------------------------------------------------------------------------
#define fi first
#define se second
#define ii pair<int, int>

//---------VECTOR----------------------------------------------------------------------------
#define pub push_back
#define vi vector<int>
#define vvi vector<vi>
#define vvvi vector<vvi>
#define vii vector<ii>
#define all(v) v.begin(),v.end()
#define as1(v, n, val) v.assign(n, val)
#define as2(v, n, m, val) v.assign(n, vi(m, val))
#define as3(v, n, m, p, val) v.assign(n, vvi(m, vi(p, val)))

//---------LOOP------------------------------------------------------------------------------
#define RESET(f, v) memset(f, v, sizeof f)
#define FOR(i, a, b) for (int i = (a), _b = (b); i <= _b; ++i)
#define FORD(i, b, a) for (int i = (b), _a = (a); i >= _a; --i)
#define FORV(v, H) for (auto &v: H)
#define REP(i, n) for (int i = 0, _n = (n); i < _n; ++i)

//---------BITMASK---------------------------------------------------------------------------
#define BIT(n, i) ((n >> i) & 1LL)
#define ONBIT(n, i) (n | (1LL << (i)))
#define OFBIT(n, i) (n ^ (1LL << (i)))
#define CNTBIT(n) __builtin_popcountll(n)
#define LOGG(n) (63 - __builtin_clzll(n))
#define MASK(i) (1LL << (i))
#define left(id)  (id << 1LL)
#define right(id) ((id << 1LL) | 1LL)
#define mid(l, r) ((l + r ) >> 1LL)

//---------COMPARE---------------------------------------------------------------------------
template <class X, class Y> bool maximize(X &A, const Y &B){
    if(A < B) return A = B, true;
    return false;
}
template <class X, class Y> bool minimize(X &A, const Y &B){
    if(A > B) return A = B, true;
    return false;
}

//---------FILE------------------------------------------------------------------------------
#define FILE(name, inp, out) if(fopen(name "." inp, "r")) {freopen(name "."  inp, "r", stdin); freopen(name "." out, "w", stdout);}

const double PI = 3.1415926535897932384626433832795; // acos(-1.0); atan(-1.0); 
const long long MOD = 1e9 + 7;
const long long oo  = 1e18;
const int MAXN  = 5e5 + 10;
const int MAX = 1e6 + 100;
const int BLOCK = 700;
const int BASE = 311;
const int inf = 2e9;

bool cmp(const int &a, const int &b, const int &c){
	return (abs(a - b) < c && c < a + b);
} 
int L;
ll calc(int a, int b, int c){
    ll res = 0;
    FORD(La, L, 0){ 
        if(La + a < b + c) break;
        ll x = min(a - b - c + La, L - La); // x = Lb + Lc
        maximize(x, -1LL);
        res += 1LL * (x + 1) * (x + 2) / 2;
        // maximize(maxx, x);
    }
    return res;
}

void JOKO(){
    vi a(3); 
    REP(i, 3) cin >> a[i]; 
    cin >> L;
    // cout << L << '\n' ;
    // FOR(i, 1, L) cout << i << ' ' << C.f[i] << '\n';
    ll total = 1LL * (L + 1) * (L + 2) / 2 * (L + 3) / 3;
    REP(i, 3) {
        ll cur = calc(a[i], a[(i + 1) % 3], a[(i + 2) % 3]);
        total -= cur;
        // cout << cur << '\n';
    }

    cout << total ;
}

 main()
 {
    //_________GET A GLASS OF WATER AND CODE_________________________________________________ 
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    FILE("cf_571_a", "inp", "out")
    //_______________________________________________________________________________________
        int nTest = 1; 
        // cin >> nTest;
        while(nTest--){
            JOKO();
            cout << endl;
        }
    //_______________________________________________________________________________________
    cerr << "\nTIME: " << (1.0 * clock() / CLOCKS_PER_SEC) << "s. \n";
    return 0;
}   
			   							    		 		  					 	